# config file version
apiVersion: 1

# list of datasources that should be deleted from the database
deleteDatasources:
  - name: Influxdb
    orgId: 1

# list of datasources to insert/update depending
# whats available in the database
datasources:
  # <string, required> name of the datasource. Required
- name: influx_System
  # <string, required> datasource type. Required
  type: influxdb
  # <string, required> access mode. direct or proxy. Required
  access: proxy
  # <int> org id. will default to orgId 1 if not specified
  orgId: 1
  # <string> url
  url: http://influxdb:8086
  # <string> database password, if used
  password: "admin"
  # <string> database user, if used
  user: "admin"
  # <string> database name, if used
  database: "System"
  # <bool> enable/disable basic auth
  basicAuth: false
#  withCredentials:
  # <bool> mark as default datasource. Max one per org
  isDefault: false
  # <map> fields that will be converted to json and stored in json_data
  jsonData:
    timeInterval: "5s"
#     graphiteVersion: "1.1"
#     tlsAuth: false
#     tlsAuthWithCACert: false
#  # <string> json object of data that will be encrypted.
#  secureJsonData:
#    tlsCACert: "..."
#    tlsClientCert: "..."
#    tlsClientKey: "..."
  version: 1
  editable: false
  # <string, required> name of the datasource. Required
- name: influx_OpenWeatherMap
  # <string, required> datasource type. Required
  type: influxdb
  # <string, required> access mode. direct or proxy. Required
  access: proxy
  # <int> org id. will default to orgId 1 if not specified
  orgId: 1
  # <string> url
  url: http://influxdb:8086
  # <string> database password, if used
  password: "admin"
  # <string> database user, if used
  user: "admin"
  # <string> database name, if used
  database: "OpenWeatherMap"
  # <bool> enable/disable basic auth
  basicAuth: false
#  withCredentials:
  # <bool> mark as default datasource. Max one per org
  isDefault: false
  # <map> fields that will be converted to json and stored in json_data
  jsonData:
    timeInterval: "5s"
#     graphiteVersion: "1.1"
#     tlsAuth: false
#     tlsAuthWithCACert: false
#  # <string> json object of data that will be encrypted.
#  secureJsonData:
#    tlsCACert: "..."
#    tlsClientCert: "..."
#    tlsClientKey: "..."
  version: 1
  editable: true
- name: influx_Viessmann
  # <string, required> datasource type. Required
  type: influxdb
  # <string, required> access mode. direct or proxy. Required
  access: proxy
  # <int> org id. will default to orgId 1 if not specified
  orgId: 1
  # <string> url
  url: http://influxdb:8086
  # <string> database password, if used
  password: "admin"
  # <string> database user, if used
  user: "admin"
  # <string> database name, if used
  database: "heizung"
  # <bool> enable/disable basic auth
  basicAuth: false
#  withCredentials:
  # <bool> mark as default datasource. Max one per org
  isDefault: false
  # <map> fields that will be converted to json and stored in json_data
  jsonData:
    timeInterval: "5s"
#     graphiteVersion: "1.1"
#     tlsAuth: false
#     tlsAuthWithCACert: false
#  # <string> json object of data that will be encrypted.
#  secureJsonData:
#    tlsCACert: "..."
#    tlsClientCert: "..."
#    tlsClientKey: "..."
  version: 1
  editable: true

- name: influx_internal
  # <string, required> datasource type. Required
  type: influxdb
  # <string, required> access mode. direct or proxy. Required
  access: proxy
  # <int> org id. will default to orgId 1 if not specified
  orgId: 1
  # <string> url
  url: http://influxdb:8086
  # <string> database password, if used
  password: "admin"
  # <string> database user, if used
  user: "admin"
  # <string> database name, if used
  database: "_internal"
  # <bool> enable/disable basic auth
  basicAuth: false
#  withCredentials:
  # <bool> mark as default datasource. Max one per org
  isDefault: false
  # <map> fields that will be converted to json and stored in json_data
  jsonData:
    timeInterval: "5s"
#     graphiteVersion: "1.1"
#     tlsAuth: false
#     tlsAuthWithCACert: false
#  # <string> json object of data that will be encrypted.
#  secureJsonData:
#    tlsCACert: "..."
#    tlsClientCert: "..."
#    tlsClientKey: "..."
  version: 1
  editable: true